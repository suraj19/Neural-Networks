# -*- coding: utf-8 -*-
"""Single_Layer_Perceptron.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SzOxkx9Yuuq-SnlTk8QB9OW60QkAN_HC
"""

x=[[1,1],[-1,1],[1,-1],[-1,-1]] #inputs x1 and x2
t=[1,-1,-1,-1]  #targets of AND given inputs

w=[0,0]  #initialize weights and bias
b=0
alpha=1

def responseOutput(xi): #calculate yin and y
    yin=b+xi[0]*w[0]+xi[1]*w[1]
    return -1 if yin<=0 else 1

def model():
    global b,w,x,t,alpha
    for i in range(len(x)):
        print("Initial Weights: ",w)
        print("Initial Bias: ",b)
        print("Input: ",x[i])
        
        while responseOutput(x[i])!=t[i]:
            #update weights
            w[0]=w[0]+alpha*t[i]*x[i][0]
            w[1]=w[1]+alpha*t[i]*x[i][1]
            b=b+alpha*t[i]
        print("Updated Weights: ",w)
        print("Updated Bias: ",b)
        print("Output: ",t[i])
        print("\n")



model()

